version: "3"
services:
  app:
    container_name: app-server
    environment:
      TZ: Asia/Tokyo
      WATCHPACK_POLLING: "true"
    build:
      context: .
      dockerfile: ./containers/nextjs/Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./sources:/app
    tty: true
    depends_on:
      db:
        condition: service_healthy
    networks:
      - dev
  web:
    container_name: web-server
    environment:
      TZ: Asia/Tokyo
    build:
      context: .
      dockerfile: ./containers/nginx/Dockerfile
    ports:
      - 80:80
    volumes:
      - ./containers/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./containers/nginx/location.conf.local:/etc/nginx/location/nginx.conf
    depends_on:
      - app
    networks:
      - dev
  db:
    container_name: db-server
    environment:
      TZ: Asia/Tokyo
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: sample
    build:
      context: .
      dockerfile: ./containers/mysql/Dockerfile
    ports:
      - 3306:3306
    volumes:
      - ./containers/mysql/data:/var/lib/mysql
      - ./containers/mysql/log:/var/log/mysql
      - ./containers/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
    networks:
      - dev

networks:
  dev:
    driver: bridge
